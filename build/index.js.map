{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "../app/components/GoalForm.tsx", "../app/store/useGoalStore.ts", "../app/models/goal.ts", "../app/components/ProgressBar.tsx", "../app/components/GoalList.tsx", "../app/components/ThemeToggle.tsx", "../app/components/Dashboard.tsx", "../app/components/ChartComponent.tsx", "../app/components/Notification.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: any\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}", "// app/root.tsx\n\nimport type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\n\nimport stylesheet from \"./tailwind.css\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nexport const meta: MetaFunction = () => [\n{ charset: \"utf-8\" },\n{ title: \"StudyTracker - Your Learning Companion\" },\n{ name: \"viewport\", content: \"width=device-width, initial-scale=1\" }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800 text-gray-900 dark:text-gray-100 min-h-screen font-sans transition-colors duration-300\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { useEffect } from \"react\";\nimport GoalForm from \"~/components/GoalForm\";\nimport GoalList from \"~/components/GoalList\";\nimport ThemeToggle from \"~/components/ThemeToggle\";\nimport Dashboard from \"~/components/Dashboard\";\nimport ChartComponent from \"~/components/ChartComponent\";\nimport Notification from \"~/components/Notification\";\nimport { useGoalStore } from \"~/store/useGoalStore\";\nimport { GoalData } from \"~/models/goal\";\n\nexport default function Index() {\n  const resetRepeatingGoals = useGoalStore((state) => state.resetRepeatingGoals);\n  const goals = useGoalStore((state) => state.goals);\n  const importGoals = useGoalStore((state) => state.importGoals);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      resetRepeatingGoals();\n    }, 24 * 60 * 60 * 1000); // Alle 24 Stunden\n    return () => clearInterval(interval);\n  }, [resetRepeatingGoals]);\n\n  const handleExport = () => {\n    const data = JSON.stringify(goals.map((goal) => goal.toJSON()));\n    const blob = new Blob([data], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"goals.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleImport = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        try {\n          const importedGoals = JSON.parse(event.target?.result as string) as GoalData[];\n          importGoals(importedGoals);\n          e.target.value = \"\"; // Zur\u00FCcksetzen des File-Inputs\n        } catch (err) {\n          alert(\"Ung\u00FCltiges Dateiformat\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen p-6\">\n      <div className=\"max-w-4xl mx-auto space-y-8\">\n        <header className=\"flex justify-between items-center py-4 border-b-2 border-indigo-200 dark:border-indigo-800\">\n          <h1 className=\"text-4xl font-extrabold text-indigo-800 dark:text-indigo-200 tracking-wide\">\n            StudyTracker\n          </h1>\n          <ThemeToggle />\n        </header>\n        <main>\n          <GoalForm />\n          <div className=\"flex gap-4 mt-6\">\n            <button\n              onClick={handleExport}\n              className=\"bg-green-600 text-white px-6 py-2 rounded-lg shadow-md hover:bg-green-700 transition-transform transform hover:scale-105\"\n            >\n              Export Goals\n            </button>\n            <label className=\"bg-purple-600 text-white px-6 py-2 rounded-lg shadow-md hover:bg-purple-700 transition-transform transform hover:scale-105 cursor-pointer\">\n              Import Goals\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={handleImport}\n                className=\"hidden\"\n              />\n            </label>\n          </div>\n          <Dashboard />\n          <ChartComponent />\n          <GoalList />\n          <Notification />\n        </main>\n      </div>\n    </div>\n  );\n}", "import { useState } from \"react\";\r\nimport { useGoalStore } from \"~/store/useGoalStore\";\r\n\r\nexport default function GoalForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(\"General\");\r\n  const [repeatInterval, setRepeatInterval] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(\"\");\r\n  const addGoal = useGoalStore((state) => state.addGoal);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (title.trim()) {\r\n      addGoal(\r\n        title,\r\n        category,\r\n        repeatInterval ? parseInt(repeatInterval, 10) : undefined,\r\n        deadline || undefined\r\n      );\r\n      setTitle(\"\");\r\n      setRepeatInterval(\"\");\r\n      setDeadline(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Goal Title</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 p-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Category</label>\r\n        <select\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 p-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n        >\r\n          <option>General</option>\r\n          <option>Math</option>\r\n          <option>Biology</option>\r\n          <option>English</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Repeat Every (days, optional)</label>\r\n        <input\r\n          type=\"number\"\r\n          value={repeatInterval}\r\n          onChange={(e) => setRepeatInterval(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 p-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Deadline (YYYY-MM-DD, optional)</label>\r\n        <input\r\n          type=\"date\"\r\n          value={deadline}\r\n          onChange={(e) => setDeadline(e.target.value)}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 p-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-indigo-600 text-white p-2 rounded-md shadow-md hover:bg-indigo-700 transition-transform transform hover:scale-105\"\r\n      >\r\n        Add Goal\r\n      </button>\r\n    </form>\r\n  );\r\n}", "\r\nimport { create } from \"zustand\";\r\nimport { Goal, GoalData } from \"~/models/goal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { persist, createJSONStorage } from \"zustand/middleware\";\r\n\r\ninterface GoalStore {\r\n  goals: Goal[];\r\n  addGoal: (title: string, category: string, repeatInterval?: number, deadline?: string) => void;\r\n  toggleGoal: (id: string) => void;\r\n  deleteGoal: (id: string) => void;\r\n  resetRepeatingGoals: () => void;\r\n  importGoals: (goals: GoalData[]) => void;\r\n  updateDeadline: (id: string, deadline: string) => void;\r\n}\r\n\r\nexport const useGoalStore = create(\r\n  persist<GoalStore>(\r\n    (set) => ({\r\n      goals: [],\r\n      addGoal: (title, category, repeatInterval, deadline) =>\r\n        set((state) => ({\r\n          goals: [\r\n            ...state.goals,\r\n            new Goal({\r\n              id: uuidv4(),\r\n              title,\r\n              category,\r\n              completed: false,\r\n              repeatInterval,\r\n              deadline,\r\n            }),\r\n          ],\r\n        })),\r\n      toggleGoal: (id) =>\r\n        set((state) => ({\r\n          goals: state.goals.map((goal) => {\r\n            if (goal.id === id) {\r\n              const newGoal = new Goal(goal.toJSON());\r\n              newGoal.toggleCompleted();\r\n              return newGoal;\r\n            }\r\n            return goal;\r\n          }),\r\n        })),\r\n      deleteGoal: (id) =>\r\n        set((state) => ({\r\n          goals: state.goals.filter((goal) => goal.id !== id),\r\n        })),\r\n      resetRepeatingGoals: () =>\r\n  set((state) => ({\r\n  goals: state.goals.map((goal) => {\r\n    if (goal.shouldReset()) {\r\n      return new Goal({ ...goal.toJSON(), completed: false });\r\n    }\r\n    return goal;\r\n  }),\r\n})),\r\n      importGoals: (goals) =>\r\n        set(() => ({\r\n          goals: goals.map((data) => new Goal(data)),\r\n        })),\r\n      updateDeadline: (id, deadline) =>\r\n        set((state) => ({\r\n          goals: state.goals.map((goal) =>\r\n            goal.id === id ? new Goal({ ...goal.toJSON(), deadline }) : goal\r\n          ),\r\n        })),\r\n    }),\r\n    {\r\n      name: \"goals-storage\", // Name f\u00FCr localStorage\r\n      storage: typeof window !== \"undefined\"\r\n        ? createJSONStorage(() => localStorage)\r\n        : undefined,\r\n    }\r\n  )\r\n);", "export interface GoalData {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  completed: boolean;\r\n  repeatInterval?: number;\r\n  lastCompleted?: string;\r\n  deadline?: string; // Neuer: Deadline im ISO-Format\r\n}\r\n\r\nexport class Goal {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  completed: boolean;\r\n  repeatInterval?: number;\r\n  lastCompleted?: Date;\r\n  deadline?: Date;\r\n\r\n  constructor(data: GoalData) {\r\n    this.id = data.id;\r\n    this.title = data.title;\r\n    this.category = data.category;\r\n    this.completed = data.completed;\r\n    this.repeatInterval = data.repeatInterval;\r\n    this.lastCompleted = data.lastCompleted ? new Date(data.lastCompleted) : undefined;\r\n    this.deadline = data.deadline ? new Date(data.deadline) : undefined;\r\n  }\r\n\r\n  toggleCompleted() {\r\n    this.completed = !this.completed;\r\n    if (this.completed) {\r\n      this.lastCompleted = new Date();\r\n    }\r\n  }\r\n\r\n  shouldReset(): boolean {\r\n    if (!this.repeatInterval || !this.lastCompleted) return false;\r\n    const now = new Date();\r\n    const diffDays = (now.getTime() - this.lastCompleted.getTime()) / (1000 * 60 * 60 * 24);\r\n    return diffDays >= this.repeatInterval;\r\n  }\r\n\r\n  isOverdue(): boolean {\r\n    return !!this.deadline && new Date() > this.deadline && !this.completed;\r\n  }\r\n\r\n  progress(): number {\r\n    return this.completed ? 1 : 0;\r\n  }\r\n\r\n  toJSON(): GoalData {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      category: this.category,\r\n      completed: this.completed,\r\n      repeatInterval: this.repeatInterval,\r\n      lastCompleted: this.lastCompleted?.toISOString(),\r\n      deadline: this.deadline?.toISOString(),\r\n    };\r\n  }\r\n}", "import { Goal } from \"~/models/goal\";\r\n\r\n     interface Props {\r\n       goals: Goal[];\r\n     }\r\n\r\n     export default function ProgressBar({ goals }: Props) {\r\n       const progress =\r\n         goals.length > 0\r\n           ? (goals.reduce((sum, goal) => sum + goal.progress(), 0) / goals.length) *\r\n             100\r\n           : 0;\r\n\r\n       const colorClass =\r\n         progress >= 75\r\n           ? \"bg-green-500\"\r\n           : progress >= 25\r\n           ? \"bg-yellow-500\"\r\n           : \"bg-red-500\";\r\n\r\n       return (\r\n         <div className=\"mt-4\">\r\n           <div className=\"w-full bg-gray-200 dark:bg-gray-600 rounded-full h-6 overflow-hidden\">\r\n             <div\r\n               className={`h-full ${colorClass} rounded-full transition-all duration-300`}\r\n               style={{ width: `${progress}%` }}\r\n             />\r\n           </div>\r\n           <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mt-2\">\r\n             {progress.toFixed(0)}% Complete\r\n           </p>\r\n         </div>\r\n       );\r\n     }", "import { useGoalStore } from \"~/store/useGoalStore\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport { FaTrash, FaClock } from \"react-icons/fa\";\r\nimport { Goal } from \"~/models/goal\";\r\n\r\nexport default function GoalList() {\r\n  const goals = useGoalStore((state) => state.goals);\r\n  const toggleGoal = useGoalStore((state) => state.toggleGoal);\r\n  const deleteGoal = useGoalStore((state) => state.deleteGoal);\r\n  const updateDeadline = useGoalStore((state) => state.updateDeadline);\r\n\r\n  const categories = Array.from(new Set(goals.map((goal: Goal) => goal.category)));\r\n  const groupedGoals = categories.map((category) => ({\r\n    category,\r\n    goals: goals.filter((goal: Goal) => goal.category === category),\r\n  }));\r\n\r\n  return (\r\n    <div className=\"space-y-6 mt-6\">\r\n      {groupedGoals.length === 0 ? (\r\n        <p className=\"text-center text-gray-500 dark:text-gray-400 italic\">\r\n          No goals added yet. Add a goal to get started!\r\n        </p>\r\n      ) : (\r\n        groupedGoals.map(({ category, goals }) => (\r\n          <div\r\n            key={category}\r\n            className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-5 transition-all duration-300 hover:shadow-xl\"\r\n          >\r\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4 border-b-2 border-indigo-200 dark:border-indigo-800 pb-2\">\r\n              {category}\r\n            </h2>\r\n            <ProgressBar goals={goals} />\r\n            <ul className=\"space-y-3 mt-4\">\r\n              {goals.map((goal: Goal) => (\r\n                <li\r\n                  key={goal.id}\r\n                  className={`flex items-center justify-between p-3 rounded-lg transition-colors duration-200 ${\r\n                    goal.isOverdue() ? \"bg-red-100 dark:bg-red-900\" : \"bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600\"\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={goal.completed || false}\r\n                      onChange={() => toggleGoal(goal.id as string)}\r\n                      className=\"h-5 w-5 text-indigo-600 focus:ring-indigo-500 rounded cursor-pointer\"\r\n                      aria-label={`Mark ${goal.title} as completed`}\r\n                    />\r\n                    <span\r\n                      className={\r\n                        goal.completed\r\n                          ? \"line-through text-gray-500 dark:text-gray-400\"\r\n                          : \"text-gray-800 dark:text-gray-200\"\r\n                      }\r\n                    >\r\n                      {goal.title}\r\n                      {goal.repeatInterval && (\r\n                        <span className=\"ml-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                          (Every {goal.repeatInterval} day{goal.repeatInterval > 1 ? \"s\" : \"\"})\r\n                        </span>\r\n                      )}\r\n                      {goal.deadline && (\r\n                        <span className=\"ml-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                          <FaClock className={goal.isOverdue() ? \"text-red-500\" : \"\"} />{\" \"}\r\n                          {goal.deadline.toLocaleDateString()}\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      onClick={() => deleteGoal(goal.id as string)}\r\n                      className=\"text-red-500 hover:text-red-700 transition-colors duration-200 mr-2\"\r\n                      aria-label={`Delete goal: ${goal.title}`}\r\n                    >\r\n                      <FaTrash size={16} />\r\n                    </button>\r\n                    <input\r\n                      type=\"date\"\r\n                      defaultValue={goal.deadline?.toISOString().split(\"T\")[0]}\r\n                      onChange={(e) => updateDeadline(goal.id as string, e.target.value)}\r\n                      className=\"p-1 rounded-md border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}", "import { useEffect, useState } from \"react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\nexport default function ThemeToggle() {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    // Nur im Browser localStorage verwenden\r\n    if (typeof window !== \"undefined\" && localStorage.getItem(\"theme\")) {\r\n      return localStorage.getItem(\"theme\") === \"dark\";\r\n    }\r\n    return true; // Standardwert, falls Server oder kein localStorage\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Nur im Browser ausf\u00FChren\r\n    if (typeof window !== \"undefined\") {\r\n      if (isDark) {\r\n        document.documentElement.classList.add(\"dark\");\r\n        localStorage.setItem(\"theme\", \"dark\");\r\n      } else {\r\n        document.documentElement.classList.remove(\"dark\");\r\n        localStorage.setItem(\"theme\", \"light\");\r\n      }\r\n    }\r\n  }, [isDark]);\r\n\r\n  return (\r\n    <button\r\n      onClick={() => setIsDark(!isDark)}\r\n      className=\"p-2 bg-gray-200 dark:bg-gray-700 rounded-full shadow-md hover:bg-gray-300 dark:hover:bg-gray-600 transition-all duration-200 transform hover:scale-110\"\r\n    >\r\n      {isDark ? (\r\n        <FaSun className=\"text-yellow-400\" size={20} />\r\n      ) : (\r\n        <FaMoon className=\"text-blue-400\" size={20} />\r\n      )}\r\n    </button>\r\n  );\r\n}", "import { useGoalStore } from \"~/store/useGoalStore\";\r\nimport { Goal } from \"~/models/goal\";\r\n\r\nexport default function Dashboard() {\r\n  const goals = useGoalStore((state) => state.goals);\r\n\r\n  const completedGoals = goals.filter((g: Goal) => g.completed).length;\r\n  const overdueGoals = goals.filter((g: Goal) => g.isOverdue()).length;\r\n  const totalGoals = goals.length;\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg mt-6\">\r\n      <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4\">Dashboard</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"p-4 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold\">Completed</h3>\r\n          <p className=\"text-2xl\">{completedGoals}</p>\r\n        </div>\r\n        <div className=\"p-4 bg-red-100 dark:bg-red-900 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold\">Overdue</h3>\r\n          <p className=\"text-2xl\">{overdueGoals}</p>\r\n        </div>\r\n        <div className=\"p-4 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold\">Total</h3>\r\n          <p className=\"text-2xl\">{totalGoals}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}", "import { useGoalStore } from \"~/store/useGoalStore\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Goal } from \"~/models/goal\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nexport default function ChartComponent() {\r\n  const goals = useGoalStore((state) => state.goals);\r\n\r\n  const data = {\r\n    labels: goals.map((g: Goal) => g.title),\r\n    datasets: [\r\n      {\r\n        label: \"Progress\",\r\n        data: goals.map((g: Goal) => g.progress()),\r\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { position: \"top\" as const },\r\n      title: { display: true, text: \"Goal Progress\" },\r\n    },\r\n  };\r\n\r\n  return <Bar data={data} options={options} />;\r\n}", "import { useEffect } from \"react\";\r\nimport { useGoalStore } from \"~/store/useGoalStore\";\r\nimport { Goal } from \"~/models/goal\";\r\n\r\nexport default function Notification() {\r\n  const goals = useGoalStore((state) => state.goals);\r\n\r\n  useEffect(() => {\r\n    goals.forEach((goal: Goal) => {\r\n      if (goal.isOverdue() && !goal.completed) {\r\n        alert(`Deadline for \"${goal.title}\" is overdue!`);\r\n      }\r\n    });\r\n  }, [goals]);\r\n\r\n  return null; // Keine UI, nur Logik\r\n}", "export default {'entry':{'module':'/build/entry.client-FWDASAWD.js','imports':['/build/_shared/chunk-4ZNTBH4S.js','/build/_shared/chunk-ZE73D4P2.js','/build/_shared/chunk-WWEL7QKW.js','/build/_shared/chunk-GHMFQHI6.js','/build/_shared/chunk-N4FG5RPV.js','/build/_shared/chunk-OPGM6WIO.js','/build/_shared/chunk-2AFRYLX2.js','/build/_shared/chunk-RODUX5XG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-5M7NVOM5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-UIGCV37C.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'83308865','hmr':{'runtime':'/build/_shared\\\\chunk-GHMFQHI6.js','timestamp':1747894980245},'url':'/build/manifest-83308865.js'};", "\nimport * as entryServer from \"C:\\\\Windows\\\\System32\\\\remix-studytracker\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_react", "import_react", "uuidv4", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "goals", "import_react", "import_fa", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "ChartJS", "import_react", "import_jsx_dev_runtime"]
}
